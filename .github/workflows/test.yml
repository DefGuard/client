name: Test backend

on:
  push:
    branches:
      - main
      - dev
      - 'release/**'
    paths-ignore:
      - '*.md'
      - 'LICENSE'
  pull_request:
    branches:
      - main
      - dev
      - 'release/**'
    paths-ignore:
      - '*.md'
      - 'LICENSE'

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on:
      - codebuild-defguard-client-runner-${{ github.run_id }}-${{ github.run_attempt }}

    container:
      image: public.ecr.aws/docker/library/rust:1
      options: --user root

    defaults:
      run:
        working-directory: ./src-tauri

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: recursive
      - name: Scan code with Trivy
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: 'fs'
          scan-ref: '.'
          exit-code: "1"
          ignore-unfixed: true
          severity: "CRITICAL,HIGH,MEDIUM"
          scanners: "vuln"
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - name: Install required packages
        run: |
          apt-get update
          apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libayatana-appindicator3-dev librsvg2-dev patchelf libssl-dev libxdo-dev unzip protobuf-compiler
      - name: Check format
        run: |
          rustup component add rustfmt
          cargo fmt -- --check
      - name: Run clippy linter
        run: |
          mkdir ../dist
          rustup component add clippy
          cargo clippy --all-targets --all-features -- -D warnings
      - name: Run cargo deny
        working-directory: ./src-tauri
        run: |
          cargo install cargo-deny
          cargo deny check
      - name: Run tests
        run: cargo test --locked --no-fail-fast
