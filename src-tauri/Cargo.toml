[package]
name = "defguard-client"
version = "0.4.0"
description = "Defguard desktop client"
license = ""
homepage = "https://github.com/DefGuard/client"
repository = "https://github.com/DefGuard/client"
default-run = "defguard-client"
edition = "2021"
rust-version = "1.60"
authors = ["Defguard"]

[build-dependencies]
tauri-build = { version = "1.5", features = [] }
tonic-build = { version = "0.10" }
prost-build = { version = "0.12" }

[dependencies]
anyhow = "1.0"
base64 = "0.22"
clap = { version = "4.4", features = ["derive", "env"] }
chrono = { version = "0.4", features = ["serde"] }
defguard_wireguard_rs = { git = "https://github.com/DefGuard/wireguard-rs.git", rev = "v0.4.5" }
dirs = "5.0"
lazy_static = "1.4"
local-ip-address = "0.5"
log = "0.4"
notify-debouncer-mini = "0.4"
prost = "0.12"
rand = "0.8"
rust-ini = "0.20"
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
serde_with = "3.5"
sqlx = { version = "0.7", features = [
    "chrono",
    "sqlite",
    "runtime-tokio",
    "uuid",
    "macros",
] }
# bundle sqlcipher driver for sqlx
libsqlite3-sys = {version = "=0.27.0", features = ["bundled-sqlcipher"] }
struct-patch = "0.4"
strum = { version = "0.25", features = ["derive"] }
dark-light = "1.0"
webbrowser = "0.8"

tauri = { version = "1.7", features = [
    "dialog-all",
    "clipboard-all",
    "http-all",
    "window-all",
    "system-tray",
    "native-tls-vendored",
    "icon-png",
    "fs-all",
] }
tauri-plugin-single-instance = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v1" }
tauri-plugin-log = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v1" }
tauri-plugin-window-state = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v1" }
thiserror = "1.0"
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }
tokio-util = "0.7"
tonic = "0.10"
tracing = "0.1"
tracing-appender = "0.2"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
x25519-dalek = { version = "2", features = ["getrandom", "static_secrets"] }
reqwest = { version = "0.11", features = ["json"] }
secrecy = {version = "0.8", features = ["alloc"] } 

[target.'cfg(target_os = "windows")'.dependencies]
windows-service = "0.6"

[target.'cfg(target_os = "macos")'.dependencies]
nix = { version = "0.28", features = ["net"] }

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]

[dev-dependencies]
tokio = { version = "1.34", features = ["full"] }
